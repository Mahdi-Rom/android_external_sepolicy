<?xml version="1.0" encoding="utf-8"?>
<policy>

<!-- 

    Rules:
    * A signature is a hex encoded X.509 certificate and is required for each signer tag.
    * A <signer signature="" > element may have multiple child elements:
        allow-permission : produces a set of maximal allowed permissions (whitelist).
        deny-permission : produces a blacklist of permissions to deny.
        allow-all : a wildcard tag that will allow every permission requested.
        package : a complex tag which itself defines allow, deny, and wildcard sub elements for
            a specific package name protected by the signature
    * Zero or more global <package name=""> tags are allowed. These tags allow a policy
      to be set outside any signature for specific package names.
    * A <default> tag is allowed that can contain install policy for all apps not signed with a
      previously listed cert and not having a per package global policy.
    * Unknown tags at any level are skipped.
    * Zero or more signer tags are allowed.
    * Zero or more package tags are allowed per signer tag.
    * A <package name=""> tag may not contain another <package name=""> tag. If found, it's skipped.
    * When multiple sub elements appear for a tag the following logic is used to
        ultimately determine the type of enforcement:
       ** A blacklist is used if at least one deny-permission tag is found
       ** A whitelist is used if not a blacklist and at least one allow-permission tag is found
       ** A wildcard (accept all permission) policy is used if not a blacklist and not a whitelist
          and at least one allow-all tag is present.
       ** If a <package name=""> sub element is found then that sub element's policy is used
          according to the above logic and overrides any signature global policy type.
       ** In order for a policy stanza to be enforced at least one of the above situations must
          apply. Meaning, empty signer, default or package tags will not be accepted.
    * Each signer/default/package (global or attached to a signer) tag is allowed to contain one
      <seinfo value=""/> tag. This tag represents additional info that each app can use in setting
      a SELinux security context on the eventual process.
    * Strict enforcing of any xml stanza is not enforced in most cases. This mainly applies to
        duplicate tags which are allowed. In the event that a tag already exists, the original
        tag is replaced.
    * There are also no checks on the validity of permission names. Although valid android
        permissions are expected, nothing prevents unknowns.
    * Enforcement decisions:
       - All signatures used to sign an app are checked for policy according to signer tags.
         Only one of the signature policies has to pass however.
       - In the event that none of the signature policies pass, or none even match, then
         a global package policy is sought. If found, this policy mediates the install.
       - The default tag is consulted last if needed.
       - A local package policy always overrides any parent policy.
       - If none of the cases apply then the app is denied.


    Example global package policy
    <package name="com.foo.com">
      <allow-permission name="android.permission.INTERNET" />
      <allow-permission name="android.permission.WRITE_EXTERNAL_STORAGE" />
      <allow-permission name="android.permission.ACCESS_NETWORK_STATE" />
    </package>

    Sample stanzas are given below based on the AOSP developer keys.

-->

    <!-- Platform dev key in AOSP -->
    <signer signature="@PLATFORM" >
      <allow-all />
      <seinfo value="platform" />
    </signer>

    <!-- Media dev key in AOSP -->
    <signer signature="@MEDIA" >
      <allow-all />
      <seinfo value="media" />
    </signer>

    <!-- shared dev key in AOSP -->
    <signer signature="@SHARED" >
      <allow-all />
      <seinfo value="shared" />
    </signer>

    <!-- release dev key in AOSP -->
    <signer signature="@RELEASE" >
      <allow-all />
      <seinfo value="release" />
      <deny-permission name="android.permission.BRICK" />
      <deny-permission name="android.permission.READ_LOGS" />
      <deny-permission name="com.android.browser.permission.READ_HISTORY_BOOKMARKS" />
      <deny-permission name="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS" />
    </signer>

    <!-- All other keys -->
    <default>
      <allow-all />
      <seinfo value="default" />
      <!-- These permissions are legitimate for apps. This list needs
           to be remade with the system|signature perms 
      <deny-permission name="android.permission.ACCESS_COARSE_LOCATION" />
      <deny-permission name="android.permission.ACCESS_FINE_LOCATION" />
      <deny-permission name="android.permission.AUTHENTICATE_ACCOUNTS" />
      <deny-permission name="android.permission.CALL_PHONE" />
      <deny-permission name="android.permission.CAMERA" />
      <deny-permission name="android.permission.READ_LOGS" />
      <deny-permission name="android.permission.WRITE_EXTERNAL_STORAGE" /-->
    </default>

</policy>
